(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{476:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"leetcode-0005-最长回文子串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-0005-最长回文子串"}},[s._v("#")]),s._v(" Leetcode - 0005 - 最长回文子串")]),s._v(" "),n("h3",{attrs:{id:"_1-题目链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-题目链接"}},[s._v("#")]),s._v(" 1."),n("a",{attrs:{href:"https://leetcode.cn/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"}},[s._v("题目链接"),n("OutboundLink")],1)]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(">\n>\n>给你一个字符串 `s`，找到 `s` 中最长的回文子串。\n")])])]),n("h2",{attrs:{id:"_2-思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-思路"}},[s._v("#")]),s._v(" 2. 思路")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("状态转移方程")]),s._v(" "),n("p",[s._v("设"),n("code",[s._v("f[i][j]")]),s._v(" 表示 字符串 "),n("code",[s._v("[l, r]")]),s._v(" 是否为回文子串。则易得状态转移方程为"),n("code",[s._v("f[i][j] = f[i + 1][j - 1] && (s[i] == s[j])")])])]),s._v(" "),n("li",[n("p",[s._v("状态初始化")]),s._v(" "),n("p",[s._v("考虑 字符串长度为1 和 2 时的边界情况，递推前可进行特殊初始化操作")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("for(int i = 0; i < len; i ++)\n        {\n            f[i][i] = true;\n            if(i + 1 < len && s[i] == s[i + 1])\n            {\n                ans = 2;\n                bg = i;\n                f[i][i + 1] = true;\n            }\n        }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"_3-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码"}},[s._v("#")]),s._v(" 3.代码")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("string longestPalindrome(string s) {\n        bool f[1010][1010] = {false};\n        int len = s.size();\n        int ans = 1;\n        int bg = 0;\n        for(int i = 0; i < len; i ++)\n        {\n            f[i][i] = true;\n            if(i + 1 < len && s[i] == s[i + 1])\n            {\n                ans = 2;\n                bg = i;\n                f[i][i + 1] = true;\n            }\n        }\n        for(int i = 3; i <= len; i ++)\n        {\n            for(int j = 0; j + i <= len; j ++)\n            {\n         \n                int l = j;\n                int r = j + i - 1;\n                if(f[l + 1][r - 1] && (s[l] == s[r]))\n                {\n                    f[l][r] = true;\n                    if(i > ans) {ans = i; bg = j;}\n                }\n            }\n        }\n        return s.substr(bg, ans);\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);