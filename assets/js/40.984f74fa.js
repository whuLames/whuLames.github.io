(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{480:function(n,s,a){"use strict";a.r(s);var i=a(2),t=Object(i.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"动态规划-完全背包问题-货币系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态规划-完全背包问题-货币系统"}},[n._v("#")]),n._v(" 动态规划 && 完全背包问题 -- 货币系统")]),n._v(" "),s("h3",{attrs:{id:"模板题-货币系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板题-货币系统"}},[n._v("#")]),n._v(" 模板题 -- "),s("a",{attrs:{href:"https://www.acwing.com/problem/content/1023/",target:"_blank",rel:"noopener noreferrer"}},[n._v("货币系统"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("1.题目描述：")]),n._v(" "),s("blockquote",[s("p",[n._v("给你一个n种面值的货币系统，求组成面值为m的货币有多少种方案。")]),n._v(" "),s("h4",{attrs:{id:"输入格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入格式"}},[n._v("#")]),n._v(" 输入格式")]),n._v(" "),s("p",[n._v("第一行，包含两个整数n和m。")]),n._v(" "),s("p",[n._v("接下来n行，每行包含一个整数，表示一种货币的面值。")]),n._v(" "),s("h4",{attrs:{id:"输出格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出格式"}},[n._v("#")]),n._v(" 输出格式")]),n._v(" "),s("p",[n._v("共一行，包含一个整数，表示方案数。")]),n._v(" "),s("h4",{attrs:{id:"数据范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据范围"}},[n._v("#")]),n._v(" 数据范围")]),n._v(" "),s("p",[n._v("n≤15,m≤3000")])]),n._v(" "),s("p",[n._v("2.思路：")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("递推方程")]),n._v(" "),s("p",[n._v("经典的完全背包问题思考方式，状态转移方程 "),s("code",[n._v("f[i][j]")]),n._v(" 表示，只考虑前 "),s("code",[n._v("i")]),n._v(" 种面值，构成面值为 "),s("code",[n._v("j")]),n._v(" 的货币的方案的集合，其中 "),s("code",[n._v("f[i][j]")]),n._v(" = 方案数。")]),n._v(" "),s("p",[n._v("则"),s("code",[n._v("f[i][j]")]),n._v(" 可以按照第 "),s("code",[n._v("i")]),n._v(" 种面值选取几张来进行分类，选取一张则为"),s("code",[n._v("f[i - 1][j - a[i]]")]),n._v(" .....，易得状态转移方程为：")]),n._v(" "),s("div",{staticClass:"language-C++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("f[i][j] = f[i - 1][j] + f[i - 1][j - a[i]] + ... + f[i - 1][j - x * a[i]] // 注意x的范围，x = j / a[i]\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("p",[n._v("由状态转移方程可知，每一层只用到上一层的状态，故可使用"),s("strong",[n._v("滚动")]),n._v("进行空间压缩")])]),n._v(" "),s("li",[s("p",[n._v("状态初始化")])])]),n._v(" "),s("p",[n._v("对于DP问题，状态初始化也是很重要的一步。一般来说是对"),s("code",[n._v("f[0][0]")]),n._v(" 或者 "),s("code",[n._v("f[0]")]),n._v(" 进行状态初始化，即赋值。")]),n._v(" "),s("p",[n._v("对于本题来说，我们需要确保"),s("code",[n._v("f[1][a[1]]")]),n._v(" = 1，则易得需要"),s("code",[n._v("f[0][0] = 1")]),n._v(" 。更一般来说，考虑"),s("code",[n._v("f[i][j]")]),n._v(" 当 "),s("code",[n._v("j % a[i] == 0")]),n._v("的情况，一定会有一种方案是只使用"),s("code",[n._v("a[i]")]),n._v("货币，即"),s("code",[n._v("f[i - 1][0]")]),n._v(" 代表一种存在的方案，所以，我们需要把"),s("code",[n._v("f[i][0]")]),n._v(" 均初始化为1，对于滚动数组即"),s("code",[n._v("f[0] = 1")]),n._v(" 。")]),n._v(" "),s("p",[n._v("也可以从实际角度出发理解状态初始化，根据实际意义，前"),s("code",[n._v("i")]),n._v("个物品构成面值0的方案数恒为1.")]),n._v(" "),s("p",[n._v("3.代码(一维滚动数组)")]),n._v(" "),s("div",{staticClass:"language-C++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 3010;\nlong f[N]; // 状态转移 滚动数组\nint a[N];\nint main()\n{\n    int n,m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i ++ )\n        cin >> a[i];\n    \n    f[0] = 1;\n    for (int i = 1; i <= n; i ++ )\n    {\n        for(int j = m; j >= 0; j --)\n        {\n            int x = j / a[i];\n            while(x)\n            {\n                f[j] += f[j - x * a[i]];\n                x -= 1;\n            }\n        }\n    }\n    cout << f[m] << endl; \n    \n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])]),s("h3",{attrs:{id:"变型题-货币系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变型题-货币系统"}},[n._v("#")]),n._v(" 变型题 "),s("a",{attrs:{href:"https://www.acwing.com/problem/content/534/",target:"_blank",rel:"noopener noreferrer"}},[n._v("货币系统"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("1.题目描述")]),n._v(" "),s("p",[n._v("​\t过长省略，见连接")]),n._v(" "),s("p",[n._v("2.思路")]),n._v(" "),s("p",[n._v("​\t已知货币系统(n,a)，希望找到与(n,a)等价的货币系统(m,b)，且使得m最小。")]),n._v(" "),s("p",[n._v("​\t改题目经分析易得，如果数组a[n]中的一个数"),s("code",[n._v("a[i]")]),n._v("不可以被其他数所表示，则"),s("code",[n._v("a[i]")]),n._v(" 一定比不可少，反之"),s("code",[n._v("a[i]")]),n._v(" 可有可无，可以删掉。")]),n._v(" "),s("p",[n._v("​\t那么我们的任务就变成，找到所有可以被其他数表示的"),s("code",[n._v("a[i]")]),n._v(" 删除掉所有 "),s("code",[n._v("a[i]")]),n._v(" 之后，剩下的个数即为m的值。")]),n._v(" "),s("p",[n._v("​\t下面的问题就是遍历每一个数字，判断其能否被其他数字表示，这时我们需要确定遍历序列顺序。易知，每个数只能被比自己小的数表示，所以升序列即为我们需要遍历的序列。")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("状态转移方程")]),n._v(" "),s("p",[s("code",[n._v("f[i][j]")]),n._v(" 表示，只考虑前 "),s("code",[n._v("i")]),n._v(" 个数，能否表示 "),s("code",[n._v("j")]),n._v(" , "),s("code",[n._v("f[i][j]")]),n._v(" 为 bool 类型变量。")]),n._v(" "),s("p",[n._v("则状态转移方程为：")]),n._v(" "),s("div",{staticClass:"language-C++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("f[i][j] = f[i - 1][j] || f[i - 1][j - a[i]] ||  ......  || f[i - 1][j - x * a[i]] // x =  j / a[i]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])])]),n._v(" "),s("li",[s("p",[n._v("状态初始化为")]),n._v(" "),s("p",[s("code",[n._v("f[0][0] = true")]),n._v(" or "),s("code",[n._v("f[0] = true")])])])]),n._v(" "),s("p",[n._v("3.代码")]),n._v(" "),s("div",{staticClass:"language-C++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 二维状态\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 25010;\nconst int M = 110;\nbool f[M][N];\nint a[N];\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --)\n    {\n        // 状态方程初始化\n        memset(f, 0, sizeof f);\n        f[0][0] = true;\n        int n;\n        cin >> n;\n        for(int i = 1; i <= n; i ++)\n            cin >> a[i];\n        sort(a + 1, a + n + 1);\n        int m = a[n];\n        for(int i = 1; i <= n; i ++)\n        {\n            for(int j = 0; j <= m; j ++)\n            {\n                f[i][j] = f[i - 1][j] || f[i][j];\n                int x = j / a[i];\n                while(x)\n                {\n                    f[i][j] = f[i][j] || f[i - 1][j - x * a[i]];\n                    x --;\n                }\n            }\n        }\n        int ans = 0;\n\n        for (int i = 1; i <= n; i ++ )\n        {\n            if(f[i - 1][a[i]]) \n            {\n                ans ++;\n            }\n        }\n        cout << n - ans << endl;\n    }\n}\n// 一维状态\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 25010;\nconst int M = 110;\nbool f[N];\nint a[N];\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --)\n    {\n        // 状态方程初始化\n        memset(f, 0, sizeof f);\n        f[0] = true;\n        int n;\n        cin >> n;\n        for(int i = 1; i <= n; i ++)\n            cin >> a[i];\n        sort(a + 1, a + n + 1);\n        int m = a[n];\n        int ans = 0;\n        for(int i = 1; i <= n; i ++)\n        {\n            if(f[a[i]]) ans ++;\n            for(int j = m; j >= 0; j --)\n            {\n                int x = j / a[i];\n                while(x)\n                {\n                    f[j] = f[j] || f[j - x * a[i]];\n                    x --;\n                }\n            }\n        }\n        cout << n - ans << endl;\n    }\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br")])]),s("p",[n._v("​\t本题一维代码和二维代码之间的转换易懂。笔者开始采用二维写法而不使用一维写法的原因是当你得到所有状态"),s("code",[n._v("f[i][j]")]),n._v(" 后，对于"),s("code",[n._v("a[i]")]),n._v(" 是否可以剔除，需要判断"),s("code",[n._v("f[i - 1][a[i]]")]),n._v(" 是否为"),s("code",[n._v("true")]),n._v(" ，是则直接剔除，反之保留。所以笔者认为需要保存全部状态，但是我们可以发现对于"),s("code",[n._v("a[i]")]),n._v(" 我们只需要其上层状态"),s("code",[n._v("f[i - 1][a[i]]")]),n._v(" 所以大可以在第一层循环中进行判断，从而直接采用一维状态滚动数组，见代码77行。")])])}),[],!1,null,null,null);s.default=t.exports}}]);